{
  "get": {
    "operationId": "getUserId",
    "tags": ["User"],
    "security": [{ "bearerAuth": [] }],
    "parameters": [
      {
        "in": "query",
        "name": "_id",
        "type": "string",
        "required": true
      }
    ],
    "responses": {
      "200": {
        "description": "OK"
      },
      "400": {
        "description": "Field is required"
      },
      "401": {
        "description": "Unauthorized"
      },
      "404": {
        "description": "User Not Found"
      }
    }
  },
  "delete": {
    "operationId": "deleteUserId",
    "tags": ["User"],
    "security": [{ "bearerAuth": [] }],
    "parameters": [
      {
        "in": "query",
        "name": "_id",
        "type": "string",
        "required": true
      }
    ],
    "responses": {
      "200": {
        "description": "User deleted successfully"
      },
      "400": {
        "description": "Field is required"
      },
      "401": {
        "description": "Unauthorized"
      },
      "404": {
        "description": "User Not Found"
      }
    }
  },
  "put": {
    "operationId": "updateUserId",
    "tags": ["User"],
    "summary": "Update a user",
    "security": [{ "bearerAuth": [] }],
    "parameters": [
      {
        "in": "query",
        "name": "_id",
        "type": "string",
        "required": true
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": false
              },
              "password": {
                "type": "string",
                "required": false
              }
            },
            "example": {
              "name": "Will",
              "password": "1234"
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "User updated successfully"
      },
      "400": {
        "description": "Field is required"
      },
      "401": {
        "description": "Unauthorized"
      },
      "404": {
        "description": "User Not Found"
      }
    }
  }
}